<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.0.xsd
">
	<!-- XML:两种 合法XML(符合语法),有效的XML(有XSD验证的XML称为有效的XML) -->
	<!-- 1: 配置声明式事务(编程式就是在代码中编写,声明式事务就是在XML中配置) -->
	<bean id="tm" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds" />
	</bean>
	<!-- 2： tx标签来配置哪些方法需要动态切入事务(tx标签需要手动导入) 
	    首先tx必须参照事务管理器
	-->
	<tx:advice id="ad" transaction-manager="tm">
		<tx:attributes>
		    <!-- 哪些方法需要运行时动态切入事务 -->
			<tx:method name="save*"/>
			<tx:method name="update*"/>
			<tx:method name="delete*"/>
		</tx:attributes>
	</tx:advice>
	<!-- 3：配置Service层的save update delete才需要切入事务 -->
	<aop:config>
	    <!-- 配置切面表达式 
	        cn.yd.oa.service.*.*  :代表当前包的类的所有方法
	        (..) 此方法有无参数都可以
	        * cn.yd.oa.service: *代表当前方法有无返回值都可以
	    -->
	    <aop:pointcut expression="execution(* cn.springmvc.service.*.*(..))" id="pt"/>
	    <!-- 通过此配置,就能确定声明式事务的切面规则 -->
	    <aop:advisor advice-ref="ad" pointcut-ref="pt"/>
	</aop:config>
	
	
	<!-- ProductDao ==> BaseDao ==> JdbcUtils ProductDao ==> JdbctTemplate ===> 
		DataSource -->
	<bean id="ds" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl"
			value="jdbc:mysql://localhost:3306/mysql" />
		<property name="user" value="root" />
		<property name="password" value="" />
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
	</bean>

	<bean id="jt" class="org.springframework.jdbc.core.JdbcTemplate">
		<!-- name="dataSouce 对应的是源码中的set方法" -->
		<property name="dataSource" ref="ds" />
	</bean>
	
	<!-- 项目开发中: xml配置冗余(开发慢,维护方便),注解：开发时快,维护时不方便, 注解是不可能完全取代XML
	 -->
	 
	 <!-- 注意：如果要使用注解则需要在spring配置文件中声明注解扫描(包括当前包子包) -->
	 <context:component-scan base-package="cn.springmvc.service" />
	 <context:component-scan base-package="cn.springmvc.dao" />
    <!-- 
	<bean id="pd" class="cn.springmvc.dao.ProductDao">
		<property name="jdbcTemplate" ref="jt" />
	</bean>
     -->
	<!-- 
	<bean id="ps" class="cn.springmvc.service.ProductService">
		<property name="productDao" ref="pd" />
	</bean>
	 -->
	
	
</beans>













